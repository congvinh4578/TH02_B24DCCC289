import React, { useState } from 'react';
import axios from 'axios';
const Weather: React.FC = () => {
  const [city, setCity] = useState<string>('');
  const [weather, setWeather] = useState<any>(null);
  const [loading, setLoading] = useState<boolean>(false);
  const [error, setError] = useState<string>('');
  const getWeather = async () => {
    if (!city) {
      setError('Vui l√≤ng nh·∫≠p t√™n th√†nh ph·ªë!');
      return;
    }
    setLoading(true);
    setError('');
    try {
      const res = await axios.get(`https://wttr.in/${city}?format=j1`);
      const current = res.data.current_condition[0];
      setWeather({
        tempC: current.temp_C,
        desc: current.weatherDesc[0].value,
      });
    } catch {
      setError('Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu. Ki·ªÉm tra l·∫°i t√™n th√†nh ph·ªë!');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div
      style={{
        textAlign: 'center',
        padding: '2rem',
        marginTop: '0',
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'flex-start',
        alignItems: 'center',
        minHeight: '100vh',
      }}
    >
      <h1>üå§Ô∏è ·ª®ng d·ª•ng th·ªùi ti·∫øt</h1>

      <input
        type="text"
        placeholder="Nh·∫≠p t√™n th√†nh ph·ªë..."
        value={city}
        onChange={(e) => setCity(e.target.value)}
        style={{
          padding: '8px',
          borderRadius: '6px',
          border: '1px solid #ccc',
          marginRight: '8px',
        }}
      />
      <button
        onClick={getWeather}
        style={{
          padding: '8px 16px',
          borderRadius: '6px',
          backgroundColor: '#007bff',
          color: '#fff',
          border: 'none',
          cursor: 'pointer',
        }}
      >
        Xem th·ªùi ti·∫øt
      </button>
      {loading && <p>‚è≥ ƒêang t·∫£i d·ªØ li·ªáu...</p>}
      {error && <p style={{ color: 'red' }}>{error}</p>}
      {weather && (
        <div style={{ marginTop: '1rem' }}>
          <h2>Th·ªùi ti·∫øt t·∫°i: {city}</h2>
          <p>Nhi·ªát ƒë·ªô: {weather.tempC}¬∞C</p>
          <p>T√¨nh tr·∫°ng: {weather.desc}</p>
        </div>
      )}
    </div>
  );
};
export default Weather;
